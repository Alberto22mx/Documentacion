<?xml version="1.0" ?>
<cherrytree>
	<node custom_icon_id="0" foreground="" is_bold="False" name="Phaser" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1585671608.38" ts_lastsave="1585673651.36" unique_id="1">
		<rich_text></rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Instalación" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1585673645.17" ts_lastsave="1585841850.38" unique_id="3">
			<rich_text>Lo primero que se necesita es instalar nodejs.</rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="Extenciones visual studio" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1585672664.39" ts_lastsave="1585841773.95" unique_id="2">
				<rich_text>live server
code runner</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="Descargar phaser" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1585673666.12" ts_lastsave="1585674069.18" unique_id="4">
				<rich_text>Podemos dirigirnos a la pagina de descargar  y descargarlo directamente el archivo min:

</rich_text>
				<rich_text link="webs https://phaser.io/download">https://phaser.io/download</rich_text>
				<rich_text>

También podemos instalarlo por medio de la consola.

npm init -y
npm install phaser

Con esto se crea el proyecto de phaser.

Tambien vamos a instalar Phaser-cli:

</rich_text>
				<rich_text link="webs https://www.npmjs.com/package/phaser-cli">https://www.npmjs.com/package/phaser-cli</rich_text>
				<rich_text>

npm i -g phaser3-cli-gamma

Phaser-cli es una herramienta para crear proyectos de phaser de forma más rapida y sensilla, ahora que ya esta instalado falta probar instalando un proyecto:

pg --new test

poner datos de prueba y listo.</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="Estructura" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1585841850.38" ts_lastsave="1585845914.08" unique_id="5">
				<rich_text>Una vez que se a descargado phaser correctamente ahora se tiene que crear la estrutura en donde emplearemos phaser.

Para tener un buen orden tenemos que crear un index y dentro crear un div contenedor con la siguiente estructura:

&lt;div id=&quot;contenedor&quot;&gt;&lt;/div&gt;
&lt;script src=&quot;./node_modules/phaser/dist/phaser-arcade-physics.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;./src/main.js&quot;&gt;&lt;/script&gt;


Dentro del vamos la referencia hacia phaser y otro archivo que tambien tenemos que crear dentro de una carpeta src.

Una vez creada la carpeta src y el archivo main ahora hace falta la estructura basica de un proyecto phaser, dentreo de main debemos tener un codigp como el siguiente:

</rich_text>
				<rich_text foreground="#1e1e9090ffff">//Esta es la configuración que tendra tu juego los atributos son muy explicitos.
const config = {
    //Con figuración opcional
    title: 'Curso phaser', //Titulo de tu juego
    url: 'http://google.es',//Pagina de tu juego
    version: '0.0.1', //Versión de tu juego
    //Configuración necesaria
    typo: Phaser.AUTO, //Tipo de rencerisado existen Phaser.AUTO, Phaser.CANVAS y Phaser.WEBGL
    width: 640,
    height: 360,
    parent: 'contenedor', //En esta opción se tiene que colocar el id del div de en donde se va a renderizar el juego
    pixelArt: true, //Solo se usa si esta desarrollado para pixelart
    //Esto edita la información mostrada del proyecto en consola.
    banner: {
        hidePhaser: true,
        text: '#fff00f',
        background: ['#ff0000'] //Pedemos pasar varios colores
    },

    scene: {} //Aqui se crean los mundos de phaser por escenas
};

//Por ultimos instanciamos Phaser para crear el primer proyecto
const game = new Phaser.Game(config);</rich_text>
				<rich_text>

Vamos a descargar las definiciones de phaser para el autocompletado lo podemos descargar del curso de phaser.

Creamos una carpeta llamada def y colocamos el archivo.

ahora al nivel del proyecto creamos un archivos llamado jsconfig.json y dentro escribimos solo {} y lo guardamos.

</rich_text>
			</node>
		</node>
	</node>
</cherrytree>
